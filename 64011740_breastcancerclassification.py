# -*- coding: utf-8 -*-
"""64011740_BreastCancerClassification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MR1SxJbVdYANtiGkaIEUovyrPO-76WB5
"""

#Breast cancer Classification using SVM
cancer_data = pd.read_csv('/content/data (1).csv')
pd.options.display.max_columns = None
pd.options.display.max_rows = None
pd.options.display.width = None
pd.options.display.max_colwidth = None

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

from sklearn import preprocessing
from sklearn.preprocessing import MinMaxScaler
cancer_data.drop(cancer_data.columns[32] , axis =1)
cancer_data[cancer_data.columns[1]] = cancer_data[cancer_data.columns[1]].replace(('M','1','0'),(1,1,0))
cancer_data[cancer_data.columns[1]] = cancer_data[cancer_data.columns[1]].replace(('B','1','0'),(0,1,0))
cancer_data.head()

#only columns
x = cancer_data.iloc[:, :31].values
cancer_data.info()
cancer_data[0:10]

cancer_data = cancer_data[['radius_mean','texture_mean','perimeter_mean','area_mean', 'smoothness_mean','compactness_mean','concavity_mean','concave points_mean','symmetry_mean','fractal_dimension_mean','radius_se','texture_se','perimeter_se','area_se','smoothness_se','compactness_se','concavity_se','concave points_se','symmetry_se','fractal_dimension_se','radius_worst','texture_worst','perimeter_worst','area_worst','smoothness_worst','compactness_worst','concavity_worst','concave points_worst','symmetry_worst','fractal_dimension_worst','diagnosis']] #Subsetting the data
corre = cancer_data.corr() #Calculate the correlation of the above variables
sns.heatmap(corre, square = True, cmap = "magma") #Plot the correlation as heat map

from sklearn.model_selection import train_test_split
Y = cancer_data['diagnosis']
X = cancer_data.drop(columns=['diagnosis'])
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.2, random_state = 9)

from sklearn.ensemble import BaggingClassifier
from sklearn.multiclass import OneVsRestClassifier
from sklearn.svm import SVC

# We define the SVM model
scl = OneVsRestClassifier(BaggingClassifier(SVC(C = 10,kernel = 'rbf',random_state = 9, probability = True), n_jobs = -1))

# We train model
scl.fit(X_train, Y_train)

# We predict target values
Y_predict2 = scl.predict(X_test)

# The confusion matrix
from sklearn.metrics import confusion_matrix
import seaborn as sns
scl_cm = confusion_matrix(Y_test, Y_predict2)
f, ax = plt.subplots(figsize = (5,5))
sns.heatmap(scl_cm, annot = True, linewidth = 0.7, linecolor = 'red', fmt = 'g', ax = ax, cmap = "rocket_r")
plt.title('SVM Classification Confusion Matrix')
plt.xlabel('Y predict')
plt.ylabel('Y test')
plt.show()